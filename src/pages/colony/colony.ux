<template>
  <div class="colony-page">
    <!-- 页面标题 -->
    <div class="header">
      <text class="page-title">殖民地管理</text>
      <input class="back-btn" type="button" value="返回" onclick="goBack" />
    </div>
    
    <!-- 标签页导航 -->
    <div class="tab-nav">
      <input class="tab-btn" class="{{ activeTab === 'team' ? 'active' : '' }}" 
             type="button" value="小队管理" onclick="switchTab('team')" />
      <input class="tab-btn" class="{{ activeTab === 'work' ? 'active' : '' }}" 
             type="button" value="工作分配" onclick="switchTab('work')" />
      <input class="tab-btn" class="{{ activeTab === 'resources' ? 'active' : '' }}" 
             type="button" value="资源管理" onclick="switchTab('resources')" />
    </div>
    
    <!-- 小队管理页面 -->
    <div class="tab-content" show="{{ activeTab === 'team' }}">
      <div class="team-section">
        <text class="section-title">殖民者列表</text>
        <div class="colonist-list">
          <div class="colonist-card" for="colonist in colonists">
            <div class="colonist-info">
              <text class="colonist-name">{{ colonist.name }}</text>
              <text class="colonist-role">{{ colonist.role }}</text>
              <text class="colonist-health">健康: {{ colonist.health }}%</text>
            </div>
            <div class="colonist-actions">
              <input class="action-btn" type="button" value="详情" onclick="viewColonist(colonist.id)" />
              <input class="action-btn" type="button" value="治疗" onclick="healColonist(colonist.id)" />
            </div>
          </div>
        </div>
        
        <div class="team-stats">
          <text class="stats-title">小队统计</text>
          <text class="stats-item">总人数: {{ colonists.length }}</text>
          <text class="stats-item">平均健康: {{ averageHealth }}%</text>
          <text class="stats-item">工作效率: {{ workEfficiency }}%</text>
        </div>
      </div>
    </div>
    
    <!-- 工作分配页面 -->
    <div class="tab-content" show="{{ activeTab === 'work' }}">
      <div class="work-section">
        <text class="section-title">工作分配</text>
        <div class="work-assignments">
          <div class="work-category" for="category in workCategories">
            <text class="category-title">{{ category.name }}</text>
            <div class="worker-assignment">
              <text class="assigned-count">已分配: {{ category.assigned }}/{{ category.required }}</text>
              <input class="assign-btn" type="button" value="分配" onclick="assignWork(category.id)" />
            </div>
            <div class="work-priority">
              <text class="priority-label">优先级:</text>
              <input class="priority-btn" type="button" value="高" onclick="setPriority(category.id, 'high')" />
              <input class="priority-btn" type="button" value="中" onclick="setPriority(category.id, 'medium')" />
              <input class="priority-btn" type="button" value="低" onclick="setPriority(category.id, 'low')" />
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- 资源管理页面 -->
    <div class="tab-content" show="{{ activeTab === 'resources' }}">
      <div class="resources-section">
        <text class="section-title">资源库存</text>
        <div class="resource-grid">
          <div class="resource-item" for="(value, key) in resources">
            <text class="resource-name">{{ getResourceName(key) }}</text>
            <text class="resource-amount">{{ value }}</text>
            <div class="resource-actions">
              <input class="resource-btn" type="button" value="生产" onclick="produceResource(key)" />
              <input class="resource-btn" type="button" value="交易" onclick="tradeResource(key)" />
            </div>
          </div>
        </div>
        
        <div class="production-queue">
          <text class="queue-title">生产队列</text>
          <div class="queue-item" for="item in productionQueue">
            <text class="queue-name">{{ item.name }}</text>
            <text class="queue-progress">进度: {{ item.progress }}%</text>
            <input class="cancel-btn" type="button" value="取消" onclick="cancelProduction(item.id)" />
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import router from "@system.router"

export default {
  private: {
    activeTab: 'team',
    colonists: [
      {
        id: 1,
        name: '艾米',
        role: '工程师',
        health: 95,
        skills: { construction: 8, research: 6, combat: 4 }
      },
      {
        id: 2,
        name: '马克',
        role: '医生',
        health: 88,
        skills: { medical: 9, research: 7, combat: 3 }
      },
      {
        id: 3,
        name: '萨拉',
        role: '猎人',
        health: 92,
        skills: { combat: 9, hunting: 8, construction: 5 }
      }
    ],
    workCategories: [
      {
        id: 1,
        name: '建造',
        assigned: 1,
        required: 2,
        priority: 'high'
      },
      {
        id: 2,
        name: '研究',
        assigned: 1,
        required: 1,
        priority: 'medium'
      },
      {
        id: 3,
        name: '狩猎',
        assigned: 1,
        required: 1,
        priority: 'high'
      },
      {
        id: 4,
        name: '医疗',
        assigned: 1,
        required: 1,
        priority: 'low'
      }
    ],
    resources: {
      food: 120,
      materials: 85,
      energy: 200,
      medicine: 15,
      weapons: 8
    },
    productionQueue: [
      {
        id: 1,
        name: '高级武器',
        progress: 65
      },
      {
        id: 2,
        name: '医疗设备',
        progress: 30
      }
    ]
  },
  
  computed: {
    averageHealth() {
      const total = this.colonists.reduce((sum, colonist) => sum + colonist.health, 0)
      return Math.round(total / this.colonists.length)
    },
    
    workEfficiency() {
      const totalAssigned = this.workCategories.reduce((sum, cat) => sum + cat.assigned, 0)
      const totalRequired = this.workCategories.reduce((sum, cat) => sum + cat.required, 0)
      return Math.round((totalAssigned / totalRequired) * 100)
    }
  },
  
  switchTab(tab) {
    this.activeTab = tab
  },
  
  viewColonist(id) {
    const colonist = this.colonists.find(c => c.id === id)
    console.log('查看殖民者详情:', colonist)
    // 这里可以打开详情弹窗或跳转到详情页面
  },
  
  healColonist(id) {
    const colonist = this.colonists.find(c => c.id === id)
    if (colonist && this.resources.medicine > 0) {
      colonist.health = Math.min(100, colonist.health + 10)
      this.resources.medicine -= 1
      console.log(`治疗了 ${colonist.name}，健康度提升到 ${colonist.health}%`)
    } else {
      console.log('医疗用品不足')
    }
  },
  
  assignWork(categoryId) {
    const category = this.workCategories.find(c => c.id === categoryId)
    if (category && category.assigned < category.required) {
      category.assigned += 1
      console.log(`为 ${category.name} 分配了工作人员`)
    }
  },
  
  setPriority(categoryId, priority) {
    const category = this.workCategories.find(c => c.id === categoryId)
    if (category) {
      category.priority = priority
      console.log(`设置 ${category.name} 优先级为 ${priority}`)
    }
  },
  
  getResourceName(key) {
    const names = {
      food: '食物',
      materials: '材料',
      energy: '能量',
      medicine: '医疗用品',
      weapons: '武器'
    }
    return names[key] || key
  },
  
  produceResource(resourceKey) {
    if (this.resources.materials >= 5) {
      this.resources.materials -= 5
      this.resources[resourceKey] += 10
      console.log(`生产了 ${this.getResourceName(resourceKey)}`)
    } else {
      console.log('材料不足，无法生产')
    }
  },
  
  tradeResource(resourceKey) {
    console.log(`开始交易 ${this.getResourceName(resourceKey)}`)
    // 这里可以实现交易逻辑
  },
  
  cancelProduction(itemId) {
    const index = this.productionQueue.findIndex(item => item.id === itemId)
    if (index !== -1) {
      this.productionQueue.splice(index, 1)
      console.log('取消了生产任务')
    }
  },
  
  goBack() {
    router.back()
  }
}
</script>

<style>
.colony-page {
  flex-direction: column;
  background-image: url('/common/MindbendCarpet_a_512.png');
  background-size: cover;
  width: 100%;
  height: 100%;
}

.header {
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  background-color: rgba(0,0,0,0.8);
  padding: 15px;
  border-bottom: 2px solid #8B4513;
}

.page-title {
  font-size: 20px;
  color: #ffffff;
  font-weight: bold;
}

.back-btn {
  width: 60px;
  height: 30px;
  border-radius: 5px;
  background-color: rgba(139, 69, 19, 0.8);
  font-size: 12px;
  color: #ffffff;
  border: 1px solid #8B4513;
}

.tab-nav {
  flex-direction: row;
  background-color: rgba(0,0,0,0.7);
  border-bottom: 1px solid #8B4513;
}

.tab-btn {
  flex: 1;
  height: 40px;
  background-color: transparent;
  font-size: 14px;
  color: #cccccc;
  border: none;
}

.tab-btn.active {
  color: #ffffff;
  background-color: rgba(139, 69, 19, 0.8);
  border-bottom: 2px solid #8B4513;
}

.tab-content {
  flex: 1;
  padding: 15px;
}

.section-title {
  font-size: 18px;
  color: #ffffff;
  text-align: center;
  margin-bottom: 15px;
  text-shadow: 1px 1px 2px rgba(0,0,0,0.8);
}

/* 小队管理样式 */
.colonist-list {
  margin-bottom: 20px;
}

.colonist-card {
  flex-direction: row;
  justify-content: space-between;
  background-color: rgba(0,0,0,0.7);
  border-radius: 8px;
  padding: 10px;
  margin-bottom: 10px;
  border: 1px solid #8B4513;
}

.colonist-info {
  flex-direction: column;
}

.colonist-name {
  font-size: 16px;
  color: #ffffff;
  margin-bottom: 3px;
}

.colonist-role,
.colonist-health {
  font-size: 12px;
  color: #cccccc;
  margin-bottom: 2px;
}

.colonist-actions {
  flex-direction: row;
  align-items: center;
}

.action-btn {
  width: 50px;
  height: 25px;
  margin-left: 5px;
  border-radius: 4px;
  background-color: rgba(34, 139, 34, 0.8);
  font-size: 10px;
  color: #ffffff;
  border: 1px solid #228B22;
}

.team-stats {
  background-color: rgba(0,0,0,0.7);
  border-radius: 8px;
  padding: 15px;
  border: 1px solid #8B4513;
}

.stats-title {
  font-size: 16px;
  color: #ffffff;
  margin-bottom: 10px;
}

.stats-item {
  font-size: 14px;
  color: #cccccc;
  margin-bottom: 5px;
}

/* 工作分配样式 */
.work-category {
  background-color: rgba(0,0,0,0.7);
  border-radius: 8px;
  padding: 15px;
  margin-bottom: 10px;
  border: 1px solid #8B4513;
}

.category-title {
  font-size: 16px;
  color: #ffffff;
  margin-bottom: 10px;
}

.worker-assignment {
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10px;
}

.assigned-count {
  font-size: 14px;
  color: #cccccc;
}

.assign-btn {
  width: 60px;
  height: 25px;
  border-radius: 4px;
  background-color: rgba(34, 139, 34, 0.8);
  font-size: 12px;
  color: #ffffff;
  border: 1px solid #228B22;
}

.work-priority {
  flex-direction: row;
  align-items: center;
}

.priority-label {
  font-size: 12px;
  color: #cccccc;
  margin-right: 10px;
}

.priority-btn {
  width: 30px;
  height: 20px;
  margin-right: 5px;
  border-radius: 3px;
  background-color: rgba(139, 69, 19, 0.8);
  font-size: 10px;
  color: #ffffff;
  border: 1px solid #8B4513;
}

/* 资源管理样式 */
.resource-grid {
  margin-bottom: 20px;
}

.resource-item {
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  background-color: rgba(0,0,0,0.7);
  border-radius: 8px;
  padding: 10px;
  margin-bottom: 8px;
  border: 1px solid #8B4513;
}

.resource-name {
  font-size: 14px;
  color: #ffffff;
}

.resource-amount {
  font-size: 16px;
  color: #00ff00;
  font-weight: bold;
}

.resource-actions {
  flex-direction: row;
}

.resource-btn {
  width: 40px;
  height: 25px;
  margin-left: 5px;
  border-radius: 4px;
  background-color: rgba(139, 69, 19, 0.8);
  font-size: 10px;
  color: #ffffff;
  border: 1px solid #8B4513;
}

.production-queue {
  background-color: rgba(0,0,0,0.7);
  border-radius: 8px;
  padding: 15px;
  border: 1px solid #8B4513;
}

.queue-title {
  font-size: 16px;
  color: #ffffff;
  margin-bottom: 10px;
}

.queue-item {
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 8px;
}

.queue-name,
.queue-progress {
  font-size: 12px;
  color: #cccccc;
}

.cancel-btn {
  width: 40px;
  height: 20px;
  border-radius: 3px;
  background-color: rgba(139, 0, 0, 0.8);
  font-size: 10px;
  color: #ffffff;
  border: 1px solid #8B0000;
}
</style>